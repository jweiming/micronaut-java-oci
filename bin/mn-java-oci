#!/bin/sh

# Retrieve variable file
source ./vars

echo "mn-java-oci 0.0.1"

# Generate the OKE cluster 
FLAG=$PROVISION_BASIC_CLUSTER
if [[ $FLAG = "true" ]]; then
  echo "[INFO]	PROVISION_BASIC_CLUSTER=$FLAG - Provisioning OKE cluster"
  ./scripts/setup-oke.sh 
fi

# Check if Micronaut is installed, otherwise install it
if ! mn_loc="$(type -p "mn")" || [[ -z $mn_loc ]]; then
  echo "[INFO]	Installing Micronaut with SDKMAN! (details at https://sdkman.io/)"
  ./scripts/setup-micronaut.sh 
fi

# Create Micronaut Java application
echo "[INFO]	Creating Micronaut Java application"
mn create-app $APPLICATION_NAME

# Generate the Wercker yml
echo "[INFO]	Generate Wercker files" 
sed -e "s@<APPLICATION_NAME>@$APPLICATION_NAME@g" -e "s@<REGION_CODE>@$REGION_CODE@g" -e "s@<TENANCY_NAME>@$TENANCY_NAME@g" ./bin/template/wercker.yml.template > wercker.yml

# Generate the Kubernetes yml
echo "[INFO]	Generate Kubernetes deployment files"
mkdir $APPLICATION_NAME/oke
sed -e "s@<APPLICATION_NAME>@$APPLICATION_NAME@g" -e "s@<IMAGE_REPO>@$REPO_URL/$REPO_TENANCY/$APPLICATION_NAME:latest@g" -e "s@<NAMESPACE>@$NAMESPACE@g" -e "s@<REGION_CODE>@$REGION_CODE@g" -e "s@<TENANCY_NAME>@$TENANCY_NAME@g" ./bin/template/oke/oke_deployment.yaml.template > $APPLICATION_NAME/oke/oke_deployment.yaml
sed -e "s@<APPLICATION_NAME>@$APPLICATION_NAME@g" -e "s@<NAMESPACE>@$NAMESPACE@g" ./bin/template/oke/oke_service.yaml.template > $APPLICATION_NAME/oke/oke_service.yaml

echo "[INFO]	Successfully created application"
