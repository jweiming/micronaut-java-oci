# This references an OpenJDK container from the
# Docker Hub https://hub.docker.com/_/openjdk/
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: gradle:5.5.1-jdk11
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/


# mn-java-oci usage:
# Read more about OCIR
# https://www.oracle.com/webfolder/technetwork/tutorials/obe/oci/registry/index.html
# Create the following envrionment variables into your Wercker application
# 1. $USERNAME - username for container registry in OCIR
# 2. $PASSWORD - pasword for container registry in OCIR
# 3. $OKE_MASTER - Kubernetes address
# 4. $OKE_TOKEN - token string to access the cluster
# 6. $OCI_AUTH_TOKEN - the auth token for your user in OCI

build:
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    - java/gradle:
        task: build
        build_file: <APPLICATION_NAME>/build.gradle
        cache_project_cache: true

    - internal/docker-build:
        context: <APPLICATION_NAME>/
        image-name: <APPLICATION_NAME>

    # push as commit-id tag
    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        image-name: <APPLICATION_NAME>
        tag: ${WERCKER_GIT_COMMIT}
        repository: <TENANCY_NAME>/<APPLICATION_NAME>
        registry: https://<REGION_CODE>.ocir.io/v2

    # push as latest tag
    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        image-name: <APPLICATION_NAME>
        tag: latest
        repository: <TENANCY_NAME>/<APPLICATION_NAME>
        registry: https://<REGION_CODE>.ocir.io/v2

deploy-to-oke:

  steps:
    - script:
        name: echo tags
        code: |
          chmod 777 $WERCKER_ROOT/<APPLICATION_NAME>/oke/oke_service.yaml
          chmod 777 $WERCKER_ROOT/<APPLICATION_NAME>/oke/oke_deployment.yaml
    
    - wercker/kubectl@3.14.0:
        server: $OKE_MASTER
        token: $OKE_TOKEN
        cwd: $WERCKER_ROOT/<APPLICATION_NAME>/
        insecure-skip-tls-verify: true
        command: create secret docker-registry ocir-secret --docker-server=<REGION_CODE>.ocir.io --docker-username="$USERNAME" --docker-password="OCI_AUTH_TOKEN" --docker-email='test@test.com' --dry-run -o yaml > secret.yaml
    - wercker/kubectl@3.14.0:
        server: $OKE_MASTER
        token: $OKE_TOKEN
        cwd: $WERCKER_ROOT/<APPLICATION_NAME>/
        insecure-skip-tls-verify: true
        command: apply -f secret.yaml
    
    - wercker/kubectl@3.14.0:
        server: $OKE_MASTER
        token: $OKE_TOKEN
        cwd: $WERCKER_ROOT/<APPLICATION_NAME>/oke/
        insecure-skip-tls-verify: true
        command: apply -f .
